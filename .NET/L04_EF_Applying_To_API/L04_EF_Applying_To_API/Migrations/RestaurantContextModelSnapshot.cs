// <auto-generated />
using System;
using L04_EF_Applying_To_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace L04EFApplyingToAPI.Migrations
{
    [DbContext(typeof(RestaurantContext))]
    partial class RestaurantContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("L04_EF_Applying_To_API.Models.Dish", b =>
                {
                    b.Property<int>("DishId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SpiceLevel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DishId");

                    b.ToTable("Dishes");

                    b.HasData(
                        new
                        {
                            DishId = 1,
                            Country = "Lithuania",
                            CreatedDateTime = new DateTime(2022, 11, 23, 21, 58, 16, 65, DateTimeKind.Local).AddTicks(4665),
                            ImagePath = "",
                            Name = "Fried bread sticks",
                            SpiceLevel = "Low",
                            Type = "Snacks"
                        },
                        new
                        {
                            DishId = 2,
                            Country = "Lithuania",
                            CreatedDateTime = new DateTime(2022, 11, 23, 21, 58, 16, 65, DateTimeKind.Local).AddTicks(4833),
                            ImagePath = "",
                            Name = "Potatoe dumplings",
                            SpiceLevel = "Low",
                            Type = "Main dish"
                        },
                        new
                        {
                            DishId = 3,
                            Country = "Lithuania",
                            CreatedDateTime = new DateTime(2022, 11, 23, 21, 58, 16, 65, DateTimeKind.Local).AddTicks(4835),
                            ImagePath = "",
                            Name = "Kibinai",
                            SpiceLevel = "Low",
                            Type = "Street food"
                        });
                });

            modelBuilder.Entity("L04_EF_Applying_To_API.Models.RecipeItem", b =>
                {
                    b.Property<int>("RecipeItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Calories")
                        .HasColumnType("REAL");

                    b.Property<int>("DishId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RecipeItemId");

                    b.HasIndex("DishId");

                    b.ToTable("RecipeItems");

                    b.HasData(
                        new
                        {
                            RecipeItemId = 1,
                            Calories = 120.0,
                            DishId = 1,
                            Name = "Bread"
                        },
                        new
                        {
                            RecipeItemId = 2,
                            Calories = 50.0,
                            DishId = 1,
                            Name = "Cheese"
                        },
                        new
                        {
                            RecipeItemId = 3,
                            Calories = 200.0,
                            DishId = 1,
                            Name = "Mayo"
                        },
                        new
                        {
                            RecipeItemId = 4,
                            Calories = 14.0,
                            DishId = 1,
                            Name = "Garlic"
                        },
                        new
                        {
                            RecipeItemId = 5,
                            Calories = 600.0,
                            DishId = 2,
                            Name = "Potatoes"
                        },
                        new
                        {
                            RecipeItemId = 6,
                            Calories = 420.0,
                            DishId = 2,
                            Name = "Meat"
                        },
                        new
                        {
                            RecipeItemId = 7,
                            Calories = 180.0,
                            DishId = 2,
                            Name = "Sour cream"
                        },
                        new
                        {
                            RecipeItemId = 8,
                            Calories = 120.0,
                            DishId = 3,
                            Name = "Dough"
                        },
                        new
                        {
                            RecipeItemId = 9,
                            Calories = 120.0,
                            DishId = 3,
                            Name = "Meat"
                        },
                        new
                        {
                            RecipeItemId = 10,
                            Calories = 120.0,
                            DishId = 3,
                            Name = "Salt"
                        });
                });

            modelBuilder.Entity("L04_EF_Applying_To_API.Models.RecipeItem", b =>
                {
                    b.HasOne("L04_EF_Applying_To_API.Models.Dish", "Dish")
                        .WithMany("RecipeItems")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");
                });

            modelBuilder.Entity("L04_EF_Applying_To_API.Models.Dish", b =>
                {
                    b.Navigation("RecipeItems");
                });
#pragma warning restore 612, 618
        }
    }
}
